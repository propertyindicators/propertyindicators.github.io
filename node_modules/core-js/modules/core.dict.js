/*! PILab 11-05-2018 (c) 2017 propertyindicators@gmail.com */

"use strict";function Dict(a){var b=create(null);return void 0!=a&&(isIterable(a)?forOf(a,!0,function(a,c){b[a]=c}):assign(b,a)),b}function reduce(a,b,c){aFunction(b);var d,e,f=toIObject(a),g=getKeys(f),h=g.length,i=0;if(arguments.length<3){if(!h)throw TypeError("Reduce of empty object with no initial value");d=f[g[i++]]}else d=Object(c);for(;h>i;)has(f,e=g[i++])&&(d=b(d,f[e],e,a));return d}function includes(a,b){return void 0!==(b==b?keyOf(a,b):findKey(a,function(a){return a!=a}))}function get(a,b){if(has(a,b))return a[b]}function set(a,b,c){return DESCRIPTORS&&b in Object?dP.f(a,b,createDesc(0,c)):a[b]=c,a}function isDict(a){return isObject(a)&&getPrototypeOf(a)===Dict.prototype}var ctx=require("./_ctx"),$export=require("./_export"),createDesc=require("./_property-desc"),assign=require("./_object-assign"),create=require("./_object-create"),getPrototypeOf=require("./_object-gpo"),getKeys=require("./_object-keys"),dP=require("./_object-dp"),keyOf=require("./_keyof"),aFunction=require("./_a-function"),forOf=require("./_for-of"),isIterable=require("./core.is-iterable"),$iterCreate=require("./_iter-create"),step=require("./_iter-step"),isObject=require("./_is-object"),toIObject=require("./_to-iobject"),DESCRIPTORS=require("./_descriptors"),has=require("./_has"),createDictMethod=function(a){var b=1==a,c=4==a;return function(d,e,f){var g,h,i,j=ctx(e,f,3),k=toIObject(d),l=b||7==a||2==a?new("function"==typeof this?this:Dict):void 0;for(g in k)if(has(k,g)&&(h=k[g],i=j(h,g,d),a))if(b)l[g]=i;else if(i)switch(a){case 2:l[g]=h;break;case 3:return!0;case 5:return h;case 6:return g;case 7:l[i[0]]=i[1]}else if(c)return!1;return 3==a||c?c:l}},findKey=createDictMethod(6),createDictIter=function(a){return function(b){return new DictIterator(b,a)}},DictIterator=function(a,b){this._t=toIObject(a),this._a=getKeys(a),this._i=0,this._k=b};$iterCreate(DictIterator,"Dict",function(){var a,b=this,c=b._t,d=b._a,e=b._k;do{if(b._i>=d.length)return b._t=void 0,step(1)}while(!has(c,a=d[b._i++]));return"keys"==e?step(0,a):"values"==e?step(0,c[a]):step(0,[a,c[a]])}),Dict.prototype=null,$export($export.G+$export.F,{Dict:Dict}),$export($export.S,"Dict",{keys:createDictIter("keys"),values:createDictIter("values"),entries:createDictIter("entries"),forEach:createDictMethod(0),map:createDictMethod(1),filter:createDictMethod(2),some:createDictMethod(3),every:createDictMethod(4),find:createDictMethod(5),findKey:findKey,mapPairs:createDictMethod(7),reduce:reduce,keyOf:keyOf,includes:includes,has:has,get:get,set:set,isDict:isDict});